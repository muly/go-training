
[x] 1) 
mulys-mbp:1 s$ go build -o hello
mulys-mbp:1 s$ hello
bash: hello: command not found

[x]2) 
	var b  byte = 'a'
	var r rune = b
	fmt.Println(b, r)
# command-line-arguments
./hello.go:31:6: cannot use b (type byte) as type rune in assignment
	int32 and rune are interchangeable

3) Harshul: on windows installation there is "test", "doc" folders in goroot


[x]4) break outer loop demo not working
fixed. the label should be withing the scope. code is working after I moved the "Outerfor:" into the {} scope. see updated code 20200504/2/for.go


[x] 5) both slices are not having same address
	{
		var a []int
		var b []int
		a = []int{1, 2, 3, 4}
		b = a
		fmt.Println(a)
		fmt.Println(len(a), cap(a))
		print(&a)

		fmt.Println(b)
		fmt.Println(len(b), cap(b))
		print(&b)
		fmt.Println()
	}
they will be different because the slice itself has 3 fields (pointer to underlying array, len, cap), and the pointer field will be same for both
see this blogpost for more details: https://blog.golang.org/slices-intro

[x]6) 
	pending functions: function return function, closure, anonymous function


7) interface type
	var d pet
	d = &dog{name: "max"}
	fmt.Printf("%T \n", d) // printing main.dog  expecting type pet

[x] 8) practical scenario of interface as field in a struct
	ref: https://stackoverflow.com/questions/26027350/go-interface-fields

9) 2channels2unidirect.go not working. need a better example to demonstrate pipeline. TODO

10) serving https requests from go code



11) securing with JWT

12) DI packages required in golang using interfaces.

13) project Athens (related go mod)

14) ginkgo BDD

15) gomock


